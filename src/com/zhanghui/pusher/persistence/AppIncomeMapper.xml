<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhanghui.pusher.persistence.AppIncomeMapper" >
    <resultMap id="BaseResultMap" type="com.zhanghui.pusher.domain.AppIncome" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="pkg_name" property="pkgName" jdbcType="VARCHAR" />
        <result column="page_name" property="pageName" jdbcType="VARCHAR" />
        <result column="ad_owner" property="adOwner" jdbcType="VARCHAR" />
        <result column="request_times" property="requestTimes" jdbcType="INTEGER" />
        <result column="show_times" property="showTimes" jdbcType="INTEGER" />
        <result column="click_times" property="clickTimes" jdbcType="INTEGER" />
        <result column="income" property="income" jdbcType="INTEGER" />
        <result column="date" property="date" jdbcType="VARCHAR" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    </resultMap>

    <update id="updateByIdSelective" parameterType="com.zhanghui.pusher.domain.AppIncome">
        update app_income
        <set>
            <if test="fn.notEmpty(income)">
                income=#{income,jdbcType=INTEGER}
            </if>
        </set>
        where id=#{id,jdbcType=INTEGER}
    </update>

    <sql id="Base_Column_List">
        `id`,
        `pkg_name`,
        `page_name`,
        `ad_owner`,
        `request_times`,
        `show_times`,
        `click_times`,
        `income`,
        `date`,
        `gmt_create`,
        `gmt_modified`
    </sql>
    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from app_income
    </select>
    <sql id="select_count_where_sql">
        <where>
            `date` >= #{query.startTime} and `date` &lt;= #{query.endTime}
            <choose>
                <when test="fn.notEmpty(query.pkgName)">
                    and pkg_name = #{query.pkgName}
                </when>
                <otherwise>
                    and pkg_name &lt;&gt; 'all'
                </otherwise>
            </choose>
            <choose>
                <when test="fn.notEmpty(query.adOwner)">
                    and ad_owner = #{query.adOwner}
                </when>
                <otherwise>
                    and ad_owner &lt;&gt; 'all'
                </otherwise>
            </choose>
            <choose>
                <when test="fn.notEmpty(query.pageName)">
                    and page_name = #{query.pageName}
                </when>
                <otherwise>
                    and page_name &lt;&gt; 'all'
                </otherwise>
            </choose>
        </where>
    </sql>
    <select id="count" resultType="java.lang.Integer" parameterType="com.zhanghui.pusher.common.Paginator" >
        select count(*)
        from app_income
        <include refid="select_count_where_sql"/>
    </select>
    <select id="select" resultMap="BaseResultMap" parameterType="com.zhanghui.pusher.common.Paginator" >
        select
        <include refid="Base_Column_List" />
        from app_income
        <include refid="select_count_where_sql"/>
        order by `date` desc, show_times desc limit #{start},#{sqlSize}
    </select>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select <include refid="Base_Column_List"/> from app_income where id=#{id,jdbcType=INTEGER}
    </select>
</mapper>